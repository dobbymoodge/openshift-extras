# Kickstart file automatically generated by anaconda.

#version=DEVEL
install
lang en_US.UTF-8
keyboard us
services --enabled=ypbind,ntpd,network,logwatch
network --onboot yes --device eth0
rootpw  --iscrypted $6$QgevUVWY7.dTjKz6$jugejKU4YTngbFpfNlqrPsiE4sLJSj/ahcfqK8fE5lO0jxDhvdg59Qjk9Qn3vNPAUTWXOp9mchQDy6EV9.XBW1
firewall --service=ssh
authconfig --enableshadow --passalgo=sha512
selinux --enforcing
timezone --utc America/New_York
bootloader --location=mbr --driveorder=vda --append=" rhgb crashkernel=auto quiet console=ttyS0"
repo --name=openshift_onpremise_internal --baseurl=http://file.rdu.redhat.com/~bleanhar/openshift/openshift_onpremise_internal/noarch

# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work
clearpart --all --initlabel
firstboot --disable
lang en_US
keyboard us
reboot

part /boot --fstype=ext4 --size=500
part pv.253002 --grow --size=1
volgroup vg_vm1 --pesize=4096 pv.253002
logvol / --fstype=ext4 --name=lv_root --vgname=vg_vm1 --grow --size=1024 --maxsize=51200
logvol swap --name=lv_swap --vgname=vg_vm1 --grow --size=2016 --maxsize=4032

%packages
@core
@server-policy
ntp
git
rhsm-register

%post

# Set up ntp
(
echo "-- NTP --"
date

# do an initial ntpdate to set the correct time and sync up the hardware clock
# puppet will handle configuring time from now on this just ensures that the time is
# correct for the first puppetrun

# determine our correct ntp server
# dns should only return the clocks we can get to
for clock in $( host clock.corp.redhat.com | awk '{ print $NF }' ); do
    /usr/sbin/ntpdate $clock
done
/sbin/hwclock --systohc
) 2>&1 |tee -ai /root/post_install.log

# TODO generate an ssh keypair from libra.pem and check it in
mkdir /root/.ssh
chmod 600 /root/ssh
cat >> /root/.ssh/authorized_keys << KEYS
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDkMc2jArUbWICi0071HXrt5uofQam11duqo5KEDWUZGtHuMTzuoZ0XEtzpqoRSidya9HjbJ5A4qUJBrvLZ07l0OIjENQ0Kvz83alVGFrEzVVUSZyiy6+yM9Ksaa/XAYUwCibfaFFqS9aVpVdY0qwaKrxX1ycTuYgNAw3WUvkHagdG54/79M8BUkat4uNiot0bKg6VLSI1QzNYV6cMJeOzz7WzHrJhbPrgXNKmgnAwIKQOkbATYB+YmDyHpA4m/O020dWDk9vWFmlxHLZqddCVGAXFyQnXoFTszFP4wTVOu1q2MSjtPexujYjTbBBxraKw9vrkE25YZJHvbZKMsNm2b libra_onprem
KEYS

cat >> /etc/yum.repos.d/openshift_onpremise.repo << YUM
[openshift_build_setup]
name=OpenShift build setup
baseurl=http://file.rdu.redhat.com/~bleanhar/openshift/build_setup/x86_64/
enabled=1
gpgcheck=0

[openshift_onpremise_alpha]
name=OpenShift On-Premise Alpha
baseurl=http://file.rdu.redhat.com/~bleanhar/openshift/openshift_onpremise_alpha/noarch
enabled=1
gpgcheck=0

[openshift_onpremise_internal]
name=OpenShift On-Premise Internal
baseurl=http://file.rdu.redhat.com/~bleanhar/openshift/openshift_onpremise_internal/noarch
enabled=1
gpgcheck=0

[openshift_origin_public]
name=OpenShift Origin
baseurl=http://mirror.openshift.com/pub/crankcase/rhel-6/x86_64
enabled=1
gpgcheck=0
YUM

wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo
rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key

# RHSM
sed -i -e "s/rhn\./rhn.stage./" /etc/rhsm/rhsm.conf
cat > /etc/sysconfig/rhsm-register << RHSM
USERNAME=stage_test_12
PASSWORD=redhat
POOL=8a99f981370984da01370986418b0051
ENABLEREPOS=rhel-6-server-optional-rpms
RHSM

# TODO This should be an internal mirror
rpm -ivh http://mirrors.syringanetworks.net/fedora-epel/6/x86_64/epel-release-6-7.noarch.rpm

# TODO Why is this even needed?
echo "BOOTPROTO=dhcp" >> /etc/sysconfig/network-scripts/ifcfg-eth0

for IF_FILE in /etc/sysconfig/network-scripts/ifcfg-* ; do
  sed -i -e '/^NM_CONTROLLED=/ s/"yes"/"no"/' $IF_FILE
done

# TODO We should have an irc-bot that posts the IP of the VM

# TODO we should unregister our rhsm client on shutdown to keep from using all
# our entitlements
%end
