{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation for setting up an OpenShift environment",

  "Parameters" : {
    "Prefix" : {
      "Type" : "String",
      "Default" : "demo",
      "Description" : "Your DNS Prefix"
    },
    "HostedZone" : {
      "Type" : "String",
      "Default" : "cloudydemo.com",
      "Description" : "Your Route53 Zone"
    }
  },

  "Mappings" : {
    "RegionMap" : {
      "us-east-1"      : { "AMI" : "ami-eaa91183" }
    }
  },

  "Resources" : {
    "StandardSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Named firewall rules",
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "22",
          "ToPort" : "22",
          "CidrIp" : "0.0.0.0/0"
        }, {
          "IpProtocol" : "icmp",
          "FromPort" : "-1",
          "ToPort" : "-1",
          "CidrIp" : "0.0.0.0/0"
        } ]
      }
    },

    "NamedSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Named firewall rules",
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "53",
          "ToPort" : "53",
          "CidrIp" : "0.0.0.0/0"
        }, {
          "IpProtocol" : "udp",
          "FromPort" : "53",
          "ToPort" : "53",
          "CidrIp" : "0.0.0.0/0"
        }, {
          "IpProtocol" : "tcp",
          "FromPort" : "953",
          "ToPort" : "953",
          "CidrIp" : "0.0.0.0/0"
        } ]
      }
    },

    "NamedInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
        "InstanceType" : "m1.small",
        "KeyName" : "libra",
        "SecurityGroups" : [ {"Ref" : "StandardSecurityGroup"}, {"Ref" : "NamedSecurityGroup"} ],
        "Tags" : [{"Key" : "Name", "Value" : { "Fn::Join" : ["-",["openshift", {"Ref":"Prefix"}, "named"]]}}],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["",[
            "#!/bin/bash -x","\n",
            "cd ~/","\n",
            "wget http://files-oncloud.rhcloud.com/openshift-amz.sh","\n",
            "export CONF_PREFIX='", { "Ref" : "Prefix" } , "'\n",
            "export CONF_INSTALL_COMPONENTS='named'","\n",
            "sh openshift-amz.sh 'ID_NAMED' '", {"Ref" : "NamedWaitForInstanceWaitHandle"} ,"'", "\n"]]}}
      }
    },

    "NamedDNSRecord" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" : [ "", [{"Ref" : "HostedZone"}, "." ]]},
        "Comment" : "Named DNS Name",
        "Name" : { "Fn::Join" : [ "", ["ns", ".", {"Ref" : "Prefix"}, ".", {"Ref" : "HostedZone"}, "."]]},
        "Type" : "A",
        "TTL" : "30",
        "ResourceRecords" : [ {"Fn::GetAtt" : [ "NamedInstance", "PublicIp" ]} ]
      }
    },

    "AppsDelegationDNSRecord" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" : [ "", [{"Ref" : "HostedZone"}, "." ]]},
        "Comment" : "Apps Subdomain DNS Delegation",
        "Name" : { "Fn::Join" : [ "", ["apps", ".", {"Ref" : "Prefix"}, ".", {"Ref" : "HostedZone"}, "."]]},
        "Type" : "NS",
        "TTL" : "30",
        "ResourceRecords" : [ { "Fn::Join" : [ "", ["ns", ".", {"Ref" : "Prefix"}, ".", {"Ref" : "HostedZone"}, "."]]} ]
      }
    },

    "NamedWaitForInstanceWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle",
      "Properties" : {
      }
    },

    "WaitForNamed" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "NamedInstance",
      "Properties" : {
        "Handle" : {"Ref" : "NamedWaitForInstanceWaitHandle"},
        "Timeout" : "900"
      }
    },






    "BrokerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Broker firewall rules",
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "80",
          "ToPort" : "80",
          "CidrIp" : "0.0.0.0/0"
        }, {
          "IpProtocol" : "tcp",
          "FromPort" : "443",
          "ToPort" : "443",
          "CidrIp" : "0.0.0.0/0"
        } ]
      }
    },


    "BrokerInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
        "InstanceType" : "m1.large",
        "KeyName" : "libra",
        "SecurityGroups" : [ {"Ref" : "StandardSecurityGroup"}, {"Ref" : "BrokerSecurityGroup"} ],
        "Tags" : [{"Key" : "Name", "Value" : { "Fn::Join" : ["-",["openshift", {"Ref":"Prefix"}, "broker"]]}}],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["",[
            "#!/bin/bash -x","\n",
            "cd ~/","\n",
            "wget http://files-oncloud.rhcloud.com/openshift-amz.sh","\n",
            "export CONF_PREFIX='", { "Ref" : "Prefix" } , "'\n",
            "export CONF_NAMED_IP_ADDR='", {"Fn::GetAtt" : [ "NamedInstance", "PublicIp" ]}, "'\n",
            "export CONF_INSTALL_COMPONENTS='broker'","\n",
            "sh openshift-amz.sh 'ID_BROKER' '", {"Ref" : "BrokerWaitForInstanceWaitHandle"} ,"'", "\n"]]}}
      },
      "DependsOn" : "NamedInstance"
    },

    "BrokerDNSRecord" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" : [ "", [{"Ref" : "HostedZone"}, "." ]]},
        "Comment" : "Broker DNS Name",
        "Name" : { "Fn::Join" : [ "", ["broker", ".", {"Ref" : "Prefix"}, ".", {"Ref" : "HostedZone"}, "."]]},
        "Type" : "A",
        "TTL" : "30",
        "ResourceRecords" : [ {"Fn::GetAtt" : [ "BrokerInstance", "PublicIp" ]} ]
      }
    },

    "BrokerWaitForInstanceWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle",
      "Properties" : {
      }
    },

    "WaitForBroker" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "BrokerInstance",
      "Properties" : {
        "Handle" : {"Ref" : "BrokerWaitForInstanceWaitHandle"},
        "Timeout" : "1800"
      }
    },


    "NodeDNSRecord" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" : [ "", [{"Ref" : "HostedZone"}, "." ]]},
        "Comment" : "Node DNS Name",
        "Name" : { "Fn::Join" : [ "", ["node", ".", {"Ref" : "Prefix"}, ".", {"Ref" : "HostedZone"}, "."]]},
        "Type" : "A",
        "TTL" : "30",
        "ResourceRecords" : [ {"Fn::GetAtt" : [ "BrokerInstance", "PublicIp" ]} ]
      }
    },
    "ActiveMQDNSRecord" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" : [ "", [{"Ref" : "HostedZone"}, "." ]]},
        "Comment" : "ActiveMQ DNS Name",
        "Name" : { "Fn::Join" : [ "", ["activemq", ".", {"Ref" : "Prefix"}, ".", {"Ref" : "HostedZone"}, "."]]},
        "Type" : "A",
        "TTL" : "30",
        "ResourceRecords" : [ {"Fn::GetAtt" : [ "BrokerInstance", "PublicIp" ]} ]
      }
    },
    "DatastoreDNSRecord" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" : [ "", [{"Ref" : "HostedZone"}, "." ]]},
        "Comment" : "Datastore DNS Name",
        "Name" : { "Fn::Join" : [ "", ["mongo", ".", {"Ref" : "Prefix"}, ".", {"Ref" : "HostedZone"}, "."]]},
        "Type" : "A",
        "TTL" : "30",
        "ResourceRecords" : [ {"Fn::GetAtt" : [ "BrokerInstance", "PublicIp" ]} ]
      }
    }
  }
}
